# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: manage_server.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='manage_server.proto',
  package='build',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x13manage_server.proto\x12\x05\x62uild\"l\n\x07\x43ommand\x12\x0c\n\x04name\x18\x01 \x01(\t\x12&\n\x04\x61rgs\x18\x02 \x03(\x0b\x32\x18.build.Command.ArgsEntry\x1a+\n\tArgsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x16\n\x06Result\x12\x0c\n\x04line\x18\x01 \x01(\t\",\n\x07Payload\x12\x10\n\x08\x63hain_id\x18\x01 \x01(\t\x12\x0f\n\x07\x63ontent\x18\x02 \x01(\x0c\"q\n\x05\x42lock\x12\x10\n\x08\x63hain_id\x18\x01 \x01(\t\x12\x12\n\nblock_hash\x18\x02 \x01(\t\x12\x11\n\tprev_hash\x18\x03 \x01(\t\x12\x11\n\tsignature\x18\x04 \x01(\t\x12\x0c\n\x04time\x18\x05 \x01(\x03\x12\x0e\n\x06height\x18\x06 \x01(\x03\x32\x38\n\x06Manage\x12.\n\x0brun_command\x12\x0e.build.Command\x1a\r.build.Result0\x01\x32:\n\nBlockchain\x12,\n\x0c\x63reate_block\x12\x0e.build.Payload\x1a\x0c.build.Blockb\x06proto3')
)




_COMMAND_ARGSENTRY = _descriptor.Descriptor(
  name='ArgsEntry',
  full_name='build.Command.ArgsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='build.Command.ArgsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='build.Command.ArgsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=95,
  serialized_end=138,
)

_COMMAND = _descriptor.Descriptor(
  name='Command',
  full_name='build.Command',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='build.Command.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='args', full_name='build.Command.args', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_COMMAND_ARGSENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=30,
  serialized_end=138,
)


_RESULT = _descriptor.Descriptor(
  name='Result',
  full_name='build.Result',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='line', full_name='build.Result.line', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=140,
  serialized_end=162,
)


_PAYLOAD = _descriptor.Descriptor(
  name='Payload',
  full_name='build.Payload',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='chain_id', full_name='build.Payload.chain_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='content', full_name='build.Payload.content', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=164,
  serialized_end=208,
)


_BLOCK = _descriptor.Descriptor(
  name='Block',
  full_name='build.Block',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='chain_id', full_name='build.Block.chain_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='block_hash', full_name='build.Block.block_hash', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='prev_hash', full_name='build.Block.prev_hash', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='signature', full_name='build.Block.signature', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='time', full_name='build.Block.time', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='height', full_name='build.Block.height', index=5,
      number=6, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=210,
  serialized_end=323,
)

_COMMAND_ARGSENTRY.containing_type = _COMMAND
_COMMAND.fields_by_name['args'].message_type = _COMMAND_ARGSENTRY
DESCRIPTOR.message_types_by_name['Command'] = _COMMAND
DESCRIPTOR.message_types_by_name['Result'] = _RESULT
DESCRIPTOR.message_types_by_name['Payload'] = _PAYLOAD
DESCRIPTOR.message_types_by_name['Block'] = _BLOCK
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Command = _reflection.GeneratedProtocolMessageType('Command', (_message.Message,), dict(

  ArgsEntry = _reflection.GeneratedProtocolMessageType('ArgsEntry', (_message.Message,), dict(
    DESCRIPTOR = _COMMAND_ARGSENTRY,
    __module__ = 'manage_server_pb2'
    # @@protoc_insertion_point(class_scope:build.Command.ArgsEntry)
    ))
  ,
  DESCRIPTOR = _COMMAND,
  __module__ = 'manage_server_pb2'
  # @@protoc_insertion_point(class_scope:build.Command)
  ))
_sym_db.RegisterMessage(Command)
_sym_db.RegisterMessage(Command.ArgsEntry)

Result = _reflection.GeneratedProtocolMessageType('Result', (_message.Message,), dict(
  DESCRIPTOR = _RESULT,
  __module__ = 'manage_server_pb2'
  # @@protoc_insertion_point(class_scope:build.Result)
  ))
_sym_db.RegisterMessage(Result)

Payload = _reflection.GeneratedProtocolMessageType('Payload', (_message.Message,), dict(
  DESCRIPTOR = _PAYLOAD,
  __module__ = 'manage_server_pb2'
  # @@protoc_insertion_point(class_scope:build.Payload)
  ))
_sym_db.RegisterMessage(Payload)

Block = _reflection.GeneratedProtocolMessageType('Block', (_message.Message,), dict(
  DESCRIPTOR = _BLOCK,
  __module__ = 'manage_server_pb2'
  # @@protoc_insertion_point(class_scope:build.Block)
  ))
_sym_db.RegisterMessage(Block)


_COMMAND_ARGSENTRY._options = None

_MANAGE = _descriptor.ServiceDescriptor(
  name='Manage',
  full_name='build.Manage',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=325,
  serialized_end=381,
  methods=[
  _descriptor.MethodDescriptor(
    name='run_command',
    full_name='build.Manage.run_command',
    index=0,
    containing_service=None,
    input_type=_COMMAND,
    output_type=_RESULT,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_MANAGE)

DESCRIPTOR.services_by_name['Manage'] = _MANAGE


_BLOCKCHAIN = _descriptor.ServiceDescriptor(
  name='Blockchain',
  full_name='build.Blockchain',
  file=DESCRIPTOR,
  index=1,
  serialized_options=None,
  serialized_start=383,
  serialized_end=441,
  methods=[
  _descriptor.MethodDescriptor(
    name='create_block',
    full_name='build.Blockchain.create_block',
    index=0,
    containing_service=None,
    input_type=_PAYLOAD,
    output_type=_BLOCK,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_BLOCKCHAIN)

DESCRIPTOR.services_by_name['Blockchain'] = _BLOCKCHAIN

# @@protoc_insertion_point(module_scope)
